{
    "version": "2.0",
    "metadata": {
        "apiVersion": "2024-10-25",
        "auth": ["aws.auth#sigv4"],
        "endpointPrefix": "codewhisperer",
        "jsonVersion": "1.0",
        "protocol": "json",
        "protocols": ["json"],
        "serviceFullName": "AWS CodeWhisperer",
        "serviceId": "CodeWhisperer",
        "signatureVersion": "v4",
        "signingName": "codewhisperer",
        "targetPrefix": "AWSCodeWhispererService",
        "uid": "codewhisperer-2024-10-25"
    },
    "operations": {
        "AllowVendedLogDeliveryForResource": {
            "name": "AllowVendedLogDeliveryForResource",
            "http": {
                "method": "POST",
                "requestUri": "/"
            },
            "input": {
                "shape": "AllowVendedLogDeliveryForResourceRequest"
            },
            "output": {
                "shape": "AllowVendedLogDeliveryForResourceResponse"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "AccessDeniedException"
                }
            ],
            "documentation": "<p>Internal API to authorize a CodeWhisperer resource for vended log delivery.</p>"
        },
        "AssociateCustomizationPermission": {
            "name": "AssociateCustomizationPermission",
            "http": {
                "method": "POST",
                "requestUri": "/"
            },
            "input": {
                "shape": "AssociateCustomizationPermissionRequest"
            },
            "output": {
                "shape": "AssociateCustomizationPermissionResponse"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "ConflictException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "AccessDeniedException"
                }
            ],
            "documentation": "<p>Add permission for an Identity Center User/Group to use the Customization.</p>"
        },
        "CreateCustomization": {
            "name": "CreateCustomization",
            "http": {
                "method": "POST",
                "requestUri": "/"
            },
            "input": {
                "shape": "CreateCustomizationRequest"
            },
            "output": {
                "shape": "CreateCustomizationResponse"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "ConflictException"
                },
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "AccessDeniedException"
                }
            ]
        },
        "CreateProfile": {
            "name": "CreateProfile",
            "http": {
                "method": "POST",
                "requestUri": "/"
            },
            "input": {
                "shape": "CreateProfileRequest"
            },
            "output": {
                "shape": "CreateProfileResponse"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "ConflictException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "AccessDeniedException"
                }
            ],
            "documentation": "<p>Creates a CodeWhisperer profile which can then be associated to users/groups of an identity source</p>"
        },
        "DeleteCustomization": {
            "name": "DeleteCustomization",
            "http": {
                "method": "POST",
                "requestUri": "/"
            },
            "input": {
                "shape": "DeleteCustomizationRequest"
            },
            "output": {
                "shape": "DeleteCustomizationResponse"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "ConflictException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "AccessDeniedException"
                }
            ],
            "documentation": "<p>Deletes CodeWhisperer Customization and associated resources</p>"
        },
        "DeleteProfile": {
            "name": "DeleteProfile",
            "http": {
                "method": "POST",
                "requestUri": "/"
            },
            "input": {
                "shape": "DeleteProfileRequest"
            },
            "output": {
                "shape": "DeleteProfileResponse"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "ConflictException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "AccessDeniedException"
                }
            ],
            "documentation": "<p>Deletes CodeWhisperer profile and associated resources</p>"
        },
        "DisassociateCustomizationPermission": {
            "name": "DisassociateCustomizationPermission",
            "http": {
                "method": "POST",
                "requestUri": "/"
            },
            "input": {
                "shape": "DisassociateCustomizationPermissionRequest"
            },
            "output": {
                "shape": "DisassociateCustomizationPermissionResponse"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "ConflictException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "AccessDeniedException"
                }
            ],
            "documentation": "<p>Disassociate the permission for a Customization from an Identity Center User/Group.</p>"
        },
        "GenerateRecommendations": {
            "name": "GenerateRecommendations",
            "http": {
                "method": "POST",
                "requestUri": "/"
            },
            "input": {
                "shape": "GenerateRecommendationsRequest"
            },
            "output": {
                "shape": "GenerateRecommendationsResponse"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "AccessDeniedException"
                }
            ],
            "documentation": "<p>Generates recommendations based on the provided file context.</p>"
        },
        "GetCustomization": {
            "name": "GetCustomization",
            "http": {
                "method": "POST",
                "requestUri": "/"
            },
            "input": {
                "shape": "GetCustomizationRequest"
            },
            "output": {
                "shape": "GetCustomizationResponse"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "AccessDeniedException"
                }
            ]
        },
        "ListCustomizationPermissions": {
            "name": "ListCustomizationPermissions",
            "http": {
                "method": "POST",
                "requestUri": "/"
            },
            "input": {
                "shape": "ListCustomizationPermissionsRequest"
            },
            "output": {
                "shape": "ListCustomizationPermissionsResponse"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "AccessDeniedException"
                }
            ],
            "documentation": "<p>List User(s)/Group(s) who have permissions to use a Customization.</p>"
        },
        "ListCustomizationVersions": {
            "name": "ListCustomizationVersions",
            "http": {
                "method": "POST",
                "requestUri": "/"
            },
            "input": {
                "shape": "ListCustomizationVersionsRequest"
            },
            "output": {
                "shape": "ListCustomizationVersionsResponse"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "AccessDeniedException"
                }
            ],
            "documentation": "<p>List actionable versions associated with a Customization.</p>"
        },
        "ListCustomizations": {
            "name": "ListCustomizations",
            "http": {
                "method": "POST",
                "requestUri": "/"
            },
            "input": {
                "shape": "ListCustomizationsRequest"
            },
            "output": {
                "shape": "ListCustomizationsResponse"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "AccessDeniedException"
                }
            ]
        },
        "ListProfiles": {
            "name": "ListProfiles",
            "http": {
                "method": "POST",
                "requestUri": "/"
            },
            "input": {
                "shape": "ListProfilesRequest"
            },
            "output": {
                "shape": "ListProfilesResponse"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "AccessDeniedException"
                }
            ],
            "documentation": "<p>Lists one or more CodeWhisperer profiles that you have created.</p>"
        },
        "ListTagsForResource": {
            "name": "ListTagsForResource",
            "http": {
                "method": "POST",
                "requestUri": "/"
            },
            "input": {
                "shape": "ListTagsForResourceRequest"
            },
            "output": {
                "shape": "ListTagsForResourceResponse"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "AccessDeniedException"
                }
            ],
            "documentation": "<p>List tags of an existing CodeWhisperer profile.</p>"
        },
        "TagResource": {
            "name": "TagResource",
            "http": {
                "method": "POST",
                "requestUri": "/"
            },
            "input": {
                "shape": "TagResourceRequest"
            },
            "output": {
                "shape": "TagResourceResponse"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "AccessDeniedException"
                }
            ],
            "documentation": "<p>Add tags to an existing CodeWhisperer profile.</p>"
        },
        "UntagResource": {
            "name": "UntagResource",
            "http": {
                "method": "POST",
                "requestUri": "/"
            },
            "input": {
                "shape": "UntagResourceRequest"
            },
            "output": {
                "shape": "UntagResourceResponse"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "AccessDeniedException"
                }
            ],
            "documentation": "<p>Remove tags from an existing CodeWhisperer profile.</p>"
        },
        "UpdateCustomization": {
            "name": "UpdateCustomization",
            "http": {
                "method": "POST",
                "requestUri": "/"
            },
            "input": {
                "shape": "UpdateCustomizationRequest"
            },
            "output": {
                "shape": "UpdateCustomizationResponse"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "ConflictException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "AccessDeniedException"
                }
            ]
        },
        "UpdateProfile": {
            "name": "UpdateProfile",
            "http": {
                "method": "POST",
                "requestUri": "/"
            },
            "input": {
                "shape": "UpdateProfileRequest"
            },
            "output": {
                "shape": "UpdateProfileResponse"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "ConflictException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "AccessDeniedException"
                }
            ],
            "documentation": "<p>Updates an existing CodeWhisperer profile.</p>"
        },
        "VendKeyGrant": {
            "name": "VendKeyGrant",
            "http": {
                "method": "POST",
                "requestUri": "/"
            },
            "input": {
                "shape": "VendKeyGrantRequest"
            },
            "output": {
                "shape": "VendKeyGrantResponse"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "AccessDeniedException"
                }
            ],
            "documentation": "<p>Returns grant details associated with the profile under the input account Id Output includes cmk arn, grant token, and grant id</p>"
        }
    },
    "shapes": {
        "AWSAccountId": {
            "type": "string",
            "documentation": "<p>Represents the AWS account ID of the customer</p>",
            "pattern": "[0-9]{12}"
        },
        "AccessDeniedException": {
            "type": "structure",
            "required": ["message"],
            "members": {
                "message": {
                    "shape": "String"
                },
                "reason": {
                    "shape": "AccessDeniedExceptionReason"
                }
            },
            "documentation": "<p>This exception is thrown when the user does not have sufficient access to perform this action.</p>",
            "exception": true
        },
        "AccessDeniedExceptionReason": {
            "type": "string",
            "documentation": "<p>Reason for AccessDeniedException</p>",
            "enum": ["UNAUTHORIZED_CUSTOMIZATION_RESOURCE_ACCESS", "UNAUTHORIZED_WORKSPACE_CONTEXT_FEATURE_ACCESS"]
        },
        "ActiveFunctionalityList": {
            "type": "list",
            "member": {
                "shape": "FunctionalityName"
            },
            "max": 10,
            "min": 0
        },
        "AllowVendedLogDeliveryForResourceRequest": {
            "type": "structure",
            "required": ["resourceArnBeingAuthorized", "deliverySourceArn"],
            "members": {
                "resourceArnBeingAuthorized": {
                    "shape": "ResourceArn"
                },
                "deliverySourceArn": {
                    "shape": "ResourceArn"
                }
            }
        },
        "AllowVendedLogDeliveryForResourceResponse": {
            "type": "structure",
            "members": {
                "message": {
                    "shape": "String"
                }
            }
        },
        "ApplicationProperties": {
            "type": "structure",
            "required": ["tenantId", "applicationArn", "tenantUrl", "applicationType"],
            "members": {
                "tenantId": {
                    "shape": "TenantId"
                },
                "applicationArn": {
                    "shape": "ResourceArn"
                },
                "tenantUrl": {
                    "shape": "Url"
                },
                "applicationType": {
                    "shape": "FunctionalityName"
                }
            }
        },
        "ApplicationPropertiesList": {
            "type": "list",
            "member": {
                "shape": "ApplicationProperties"
            }
        },
        "AssociateCustomizationPermissionRequest": {
            "type": "structure",
            "required": ["identifier", "permission"],
            "members": {
                "identifier": {
                    "shape": "CustomizationIdentifier"
                },
                "permission": {
                    "shape": "CustomizationPermission"
                }
            }
        },
        "AssociateCustomizationPermissionResponse": {
            "type": "structure",
            "members": {}
        },
        "Base64EncodedPaginationToken": {
            "type": "string",
            "max": 2048,
            "min": 1,
            "pattern": "(?:[A-Za-z0-9\\+/]{4})*(?:[A-Za-z0-9\\+/]{2}\\=\\=|[A-Za-z0-9\\+/]{3}\\=)?"
        },
        "Boolean": {
            "type": "boolean",
            "box": true
        },
        "ByUserAnalytics": {
            "type": "structure",
            "required": ["toggle"],
            "members": {
                "s3Uri": {
                    "shape": "S3Uri"
                },
                "toggle": {
                    "shape": "OptInFeatureToggle"
                }
            }
        },
        "ClientId": {
            "type": "string",
            "max": 255,
            "min": 1
        },
        "CodeStarReference": {
            "type": "structure",
            "required": ["connectionArn"],
            "members": {
                "connectionArn": {
                    "shape": "ResourceArn"
                }
            }
        },
        "ConflictException": {
            "type": "structure",
            "required": ["message"],
            "members": {
                "message": {
                    "shape": "String"
                },
                "reason": {
                    "shape": "ConflictExceptionReason"
                }
            },
            "documentation": "<p>This exception is thrown when the action to perform could not be completed because the resource is in a conflicting state.</p>",
            "exception": true
        },
        "ConflictExceptionReason": {
            "type": "string",
            "documentation": "<p>Reason for ConflictException</p>",
            "enum": ["CUSTOMER_KMS_KEY_INVALID_KEY_POLICY", "CUSTOMER_KMS_KEY_DISABLED", "MISMATCHED_KMS_KEY"]
        },
        "CreateCustomizationRequest": {
            "type": "structure",
            "required": ["dataReference", "customizationName", "profileArn"],
            "members": {
                "dataReference": {
                    "shape": "DataReference"
                },
                "customizationName": {
                    "shape": "CustomizationName"
                },
                "description": {
                    "shape": "Description"
                },
                "profileArn": {
                    "shape": "ProfileArn"
                },
                "tags": {
                    "shape": "TagList"
                },
                "clientToken": {
                    "shape": "IdempotencyToken"
                },
                "includeRepos": {
                    "shape": "RepositoryList"
                }
            }
        },
        "CreateCustomizationResponse": {
            "type": "structure",
            "required": ["customizationArn"],
            "members": {
                "customizationArn": {
                    "shape": "CustomizationArn"
                }
            }
        },
        "CreateProfileRequest": {
            "type": "structure",
            "required": ["profileName", "referenceTrackerConfiguration"],
            "members": {
                "identitySource": {
                    "shape": "IdentitySource"
                },
                "profileName": {
                    "shape": "ProfileName"
                },
                "description": {
                    "shape": "ProfileDescription"
                },
                "referenceTrackerConfiguration": {
                    "shape": "ReferenceTrackerConfiguration"
                },
                "activeFunctionalities": {
                    "shape": "ActiveFunctionalityList"
                },
                "clientToken": {
                    "shape": "IdempotencyToken",
                    "idempotencyToken": true
                },
                "kmsKeyArn": {
                    "shape": "ResourceArn"
                },
                "tags": {
                    "shape": "TagList"
                },
                "resourcePolicy": {
                    "shape": "ResourcePolicy"
                },
                "optInFeatures": {
                    "shape": "OptInFeatures"
                }
            }
        },
        "CreateProfileResponse": {
            "type": "structure",
            "required": ["profileArn"],
            "members": {
                "profileArn": {
                    "shape": "ProfileArn"
                }
            }
        },
        "CustomizationArn": {
            "type": "string",
            "max": 950,
            "min": 0,
            "pattern": "arn:[-.a-z0-9]{1,63}:codewhisperer:([-.a-z0-9]{0,63}:){2}([a-zA-Z0-9-_:/]){1,1023}"
        },
        "CustomizationIdentifier": {
            "type": "string",
            "max": 950,
            "min": 1,
            "pattern": ".*[a-zA-Z0-9-:/]*.*"
        },
        "CustomizationName": {
            "type": "string",
            "max": 100,
            "min": 1,
            "pattern": "[a-zA-Z][a-zA-Z0-9_-]*"
        },
        "CustomizationPermission": {
            "type": "structure",
            "members": {
                "user": {
                    "shape": "IdentityCenterIdentifier"
                },
                "group": {
                    "shape": "IdentityCenterIdentifier"
                }
            },
            "union": true
        },
        "CustomizationStatus": {
            "type": "string",
            "enum": [
                "CREATED",
                "UPDATED",
                "CREATING",
                "UPDATING",
                "DELETING",
                "ACTIVATING",
                "DEACTIVATING",
                "ACTIVATED",
                "CREATION_FAILED",
                "UPDATE_FAILED",
                "DELETION_FAILED",
                "ACTIVATION_FAILED",
                "DEACTIVATION_FAILED"
            ]
        },
        "CustomizationSummary": {
            "type": "structure",
            "required": ["arn", "customizationName", "status", "updatedAt"],
            "members": {
                "arn": {
                    "shape": "CustomizationArn"
                },
                "version": {
                    "shape": "Version"
                },
                "customizationName": {
                    "shape": "CustomizationName"
                },
                "description": {
                    "shape": "Description"
                },
                "status": {
                    "shape": "CustomizationStatus"
                },
                "updatedAt": {
                    "shape": "Timestamp"
                }
            }
        },
        "CustomizationSummaryList": {
            "type": "list",
            "member": {
                "shape": "CustomizationSummary"
            }
        },
        "CustomizationVersionSummary": {
            "type": "structure",
            "required": ["version", "status", "dataReference", "updatedAt"],
            "members": {
                "version": {
                    "shape": "Version"
                },
                "baseVersion": {
                    "shape": "Version"
                },
                "status": {
                    "shape": "CustomizationStatus"
                },
                "dataReference": {
                    "shape": "DataReference"
                },
                "updatedAt": {
                    "shape": "Timestamp"
                },
                "evaluationMetrics": {
                    "shape": "EvaluationMetrics"
                }
            }
        },
        "CustomizationVersionSummaryList": {
            "type": "list",
            "member": {
                "shape": "CustomizationVersionSummary"
            }
        },
        "DashboardAnalytics": {
            "type": "structure",
            "required": ["toggle"],
            "members": {
                "toggle": {
                    "shape": "OptInFeatureToggle"
                }
            }
        },
        "DataReference": {
            "type": "structure",
            "members": {
                "codeStarReference": {
                    "shape": "CodeStarReference"
                },
                "s3Reference": {
                    "shape": "S3Reference"
                }
            },
            "union": true
        },
        "DeleteCustomizationRequest": {
            "type": "structure",
            "required": ["identifier"],
            "members": {
                "identifier": {
                    "shape": "CustomizationIdentifier"
                },
                "clientToken": {
                    "shape": "IdempotencyToken"
                }
            }
        },
        "DeleteCustomizationResponse": {
            "type": "structure",
            "members": {}
        },
        "DeleteProfileRequest": {
            "type": "structure",
            "required": ["profileArn"],
            "members": {
                "profileArn": {
                    "shape": "ProfileArn"
                }
            }
        },
        "DeleteProfileResponse": {
            "type": "structure",
            "members": {}
        },
        "Description": {
            "type": "string",
            "max": 256,
            "min": 0,
            "pattern": "[\\sa-zA-Z0-9_-]*"
        },
        "DisassociateCustomizationPermissionRequest": {
            "type": "structure",
            "required": ["identifier", "permission"],
            "members": {
                "identifier": {
                    "shape": "CustomizationIdentifier"
                },
                "permission": {
                    "shape": "CustomizationPermission"
                }
            }
        },
        "DisassociateCustomizationPermissionResponse": {
            "type": "structure",
            "members": {}
        },
        "ErrorDetails": {
            "type": "string",
            "max": 2048,
            "min": 0
        },
        "EvaluationMetrics": {
            "type": "structure",
            "required": ["compositeScore"],
            "members": {
                "compositeScore": {
                    "shape": "Integer"
                }
            }
        },
        "ExternalIdentityDetails": {
            "type": "structure",
            "members": {
                "issuerUrl": {
                    "shape": "IssuerUrl"
                },
                "clientId": {
                    "shape": "ClientId"
                },
                "scimEndpoint": {
                    "shape": "String"
                }
            }
        },
        "ExternalIdentitySource": {
            "type": "structure",
            "required": ["issuerUrl", "clientId"],
            "members": {
                "issuerUrl": {
                    "shape": "IssuerUrl"
                },
                "clientId": {
                    "shape": "ClientId"
                }
            }
        },
        "FeatureName": {
            "type": "string",
            "max": 128,
            "min": 1,
            "pattern": "[-a-zA-Z0-9._]*"
        },
        "FileContext": {
            "type": "structure",
            "required": ["leftFileContent", "rightFileContent", "filename", "programmingLanguage"],
            "members": {
                "leftFileContent": {
                    "shape": "FileContextLeftFileContentString"
                },
                "rightFileContent": {
                    "shape": "FileContextRightFileContentString"
                },
                "filename": {
                    "shape": "FileContextFilenameString"
                },
                "fileUri": {
                    "shape": "FileContextFileUriString"
                },
                "programmingLanguage": {
                    "shape": "ProgrammingLanguage"
                }
            }
        },
        "FileContextFileUriString": {
            "type": "string",
            "max": 1024,
            "min": 1,
            "sensitive": true
        },
        "FileContextFilenameString": {
            "type": "string",
            "max": 1024,
            "min": 1,
            "sensitive": true
        },
        "FileContextLeftFileContentString": {
            "type": "string",
            "max": 10240,
            "min": 0,
            "sensitive": true
        },
        "FileContextRightFileContentString": {
            "type": "string",
            "max": 10240,
            "min": 0,
            "sensitive": true
        },
        "FunctionalityName": {
            "type": "string",
            "enum": [
                "COMPLETIONS",
                "ANALYSIS",
                "CONVERSATIONS",
                "TASK_ASSIST",
                "TRANSFORMATIONS",
                "CHAT_CUSTOMIZATION",
                "TRANSFORMATIONS_WEBAPP",
                "FEATURE_DEVELOPMENT"
            ],
            "max": 64,
            "min": 1
        },
        "GenerateRecommendationsRequest": {
            "type": "structure",
            "required": ["fileContext"],
            "members": {
                "fileContext": {
                    "shape": "FileContext"
                },
                "maxResults": {
                    "shape": "GenerateRecommendationsRequestMaxResultsInteger"
                },
                "nextToken": {
                    "shape": "GenerateRecommendationsRequestNextTokenString"
                },
                "referenceTrackerConfiguration": {
                    "shape": "ReferenceTrackerConfiguration"
                },
                "supplementalContexts": {
                    "shape": "SupplementalContextList"
                }
            }
        },
        "GenerateRecommendationsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 10,
            "min": 1
        },
        "GenerateRecommendationsRequestNextTokenString": {
            "type": "string",
            "max": 2048,
            "min": 0,
            "pattern": "(?:[A-Za-z0-9\\+/]{4})*(?:[A-Za-z0-9\\+/]{2}\\=\\=|[A-Za-z0-9\\+/]{3}\\=)?"
        },
        "GenerateRecommendationsResponse": {
            "type": "structure",
            "members": {
                "recommendations": {
                    "shape": "RecommendationsList"
                },
                "nextToken": {
                    "shape": "String"
                }
            }
        },
        "GetCustomizationRequest": {
            "type": "structure",
            "required": ["identifier"],
            "members": {
                "identifier": {
                    "shape": "CustomizationIdentifier"
                }
            }
        },
        "GetCustomizationResponse": {
            "type": "structure",
            "required": ["arn", "status", "dataReference", "customizationName", "profileArn", "updatedAt"],
            "members": {
                "arn": {
                    "shape": "CustomizationArn"
                },
                "version": {
                    "shape": "Version"
                },
                "status": {
                    "shape": "CustomizationStatus"
                },
                "errorDetails": {
                    "shape": "ErrorDetails"
                },
                "dataReference": {
                    "shape": "DataReference"
                },
                "customizationName": {
                    "shape": "CustomizationName"
                },
                "description": {
                    "shape": "Description"
                },
                "profileArn": {
                    "shape": "ProfileArn"
                },
                "updatedAt": {
                    "shape": "Timestamp"
                },
                "evaluationMetrics": {
                    "shape": "EvaluationMetrics"
                },
                "includeRepos": {
                    "shape": "RepositoryList"
                }
            }
        },
        "GrantId": {
            "type": "string",
            "max": 128,
            "min": 1
        },
        "GrantToken": {
            "type": "string",
            "max": 8192,
            "min": 1
        },
        "IdempotencyToken": {
            "type": "string",
            "max": 256,
            "min": 1
        },
        "IdentityCenterIdentifier": {
            "type": "string",
            "max": 64,
            "min": 1,
            "pattern": "([0-9a-f]{10}-|)[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}"
        },
        "IdentityCenterPermissions": {
            "type": "list",
            "member": {
                "shape": "CustomizationPermission"
            }
        },
        "IdentityDetails": {
            "type": "structure",
            "members": {
                "ssoIdentityDetails": {
                    "shape": "SSOIdentityDetails"
                },
                "externalIdentityDetails": {
                    "shape": "ExternalIdentityDetails"
                }
            },
            "union": true
        },
        "IdentitySource": {
            "type": "structure",
            "members": {
                "ssoIdentitySource": {
                    "shape": "SSOIdentitySource"
                },
                "externalIdentitySource": {
                    "shape": "ExternalIdentitySource"
                }
            },
            "union": true
        },
        "Import": {
            "type": "structure",
            "members": {
                "statement": {
                    "shape": "ImportStatementString"
                }
            }
        },
        "ImportStatementString": {
            "type": "string",
            "max": 1024,
            "min": 1,
            "sensitive": true
        },
        "Imports": {
            "type": "list",
            "member": {
                "shape": "Import"
            },
            "max": 10,
            "min": 0
        },
        "Integer": {
            "type": "integer",
            "box": true
        },
        "InternalServerException": {
            "type": "structure",
            "required": ["message"],
            "members": {
                "message": {
                    "shape": "String"
                },
                "reason": {
                    "shape": "InternalServerExceptionReason"
                }
            },
            "documentation": "<p>This exception is thrown when an unexpected error occurred during the processing of a request.</p>",
            "exception": true,
            "fault": true,
            "retryable": {
                "throttling": false
            }
        },
        "InternalServerExceptionReason": {
            "type": "string",
            "documentation": "<p>Reason for InternalServerException</p>",
            "enum": ["MODEL_TEMPORARILY_UNAVAILABLE"]
        },
        "IssuerUrl": {
            "type": "string",
            "max": 255,
            "min": 1
        },
        "ListCustomizationPermissionsRequest": {
            "type": "structure",
            "required": ["identifier"],
            "members": {
                "identifier": {
                    "shape": "CustomizationIdentifier"
                },
                "maxResults": {
                    "shape": "ListCustomizationPermissionsRequestMaxResultsInteger"
                },
                "nextToken": {
                    "shape": "Base64EncodedPaginationToken"
                }
            }
        },
        "ListCustomizationPermissionsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 50,
            "min": 1
        },
        "ListCustomizationPermissionsResponse": {
            "type": "structure",
            "required": ["permissions"],
            "members": {
                "permissions": {
                    "shape": "IdentityCenterPermissions"
                },
                "nextToken": {
                    "shape": "Base64EncodedPaginationToken"
                }
            }
        },
        "ListCustomizationVersionsRequest": {
            "type": "structure",
            "required": ["identifier"],
            "members": {
                "identifier": {
                    "shape": "CustomizationIdentifier"
                },
                "maxResults": {
                    "shape": "ListCustomizationVersionsRequestMaxResultsInteger"
                },
                "nextToken": {
                    "shape": "Base64EncodedPaginationToken"
                }
            }
        },
        "ListCustomizationVersionsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 100,
            "min": 1
        },
        "ListCustomizationVersionsResponse": {
            "type": "structure",
            "required": ["versions"],
            "members": {
                "versions": {
                    "shape": "CustomizationVersionSummaryList"
                },
                "nextToken": {
                    "shape": "Base64EncodedPaginationToken"
                }
            }
        },
        "ListCustomizationsRequest": {
            "type": "structure",
            "members": {
                "maxResults": {
                    "shape": "ListCustomizationsRequestMaxResultsInteger"
                },
                "nextToken": {
                    "shape": "Base64EncodedPaginationToken"
                }
            }
        },
        "ListCustomizationsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 100,
            "min": 1
        },
        "ListCustomizationsResponse": {
            "type": "structure",
            "required": ["customizations"],
            "members": {
                "customizations": {
                    "shape": "CustomizationSummaryList"
                },
                "nextToken": {
                    "shape": "Base64EncodedPaginationToken"
                }
            }
        },
        "ListProfilesRequest": {
            "type": "structure",
            "members": {
                "maxResults": {
                    "shape": "ListProfilesRequestMaxResultsInteger"
                },
                "includeManagementAccount": {
                    "shape": "Boolean"
                },
                "nextToken": {
                    "shape": "Base64EncodedPaginationToken"
                }
            }
        },
        "ListProfilesRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 100,
            "min": 1
        },
        "ListProfilesResponse": {
            "type": "structure",
            "required": ["profiles"],
            "members": {
                "profiles": {
                    "shape": "ProfileList"
                },
                "nextToken": {
                    "shape": "Base64EncodedPaginationToken"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "structure",
            "required": ["resourceArn"],
            "members": {
                "resourceArn": {
                    "shape": "ResourceArn"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "structure",
            "members": {
                "tags": {
                    "shape": "TagList"
                }
            }
        },
        "Notifications": {
            "type": "list",
            "member": {
                "shape": "NotificationsFeature"
            },
            "max": 10,
            "min": 0
        },
        "NotificationsFeature": {
            "type": "structure",
            "required": ["feature", "toggle"],
            "members": {
                "feature": {
                    "shape": "FeatureName"
                },
                "toggle": {
                    "shape": "OptInFeatureToggle"
                }
            }
        },
        "OptInFeatureToggle": {
            "type": "string",
            "enum": ["ON", "OFF"]
        },
        "OptInFeatures": {
            "type": "structure",
            "members": {
                "promptLogging": {
                    "shape": "PromptLogging"
                },
                "byUserAnalytics": {
                    "shape": "ByUserAnalytics"
                },
                "dashboardAnalytics": {
                    "shape": "DashboardAnalytics"
                },
                "notifications": {
                    "shape": "Notifications"
                },
                "workspaceContext": {
                    "shape": "WorkspaceContext"
                }
            }
        },
        "PreviousEditorStateMetadata": {
            "type": "structure",
            "required": ["timeOffset"],
            "members": {
                "timeOffset": {
                    "shape": "Integer"
                }
            }
        },
        "Profile": {
            "type": "structure",
            "required": ["arn", "profileName"],
            "members": {
                "arn": {
                    "shape": "ProfileArn"
                },
                "identityDetails": {
                    "shape": "IdentityDetails"
                },
                "profileName": {
                    "shape": "ProfileName"
                },
                "description": {
                    "shape": "ProfileDescription"
                },
                "referenceTrackerConfiguration": {
                    "shape": "ReferenceTrackerConfiguration"
                },
                "kmsKeyArn": {
                    "shape": "ResourceArn"
                },
                "activeFunctionalities": {
                    "shape": "ActiveFunctionalityList"
                },
                "status": {
                    "shape": "ProfileStatus"
                },
                "errorDetails": {
                    "shape": "ErrorDetails"
                },
                "resourcePolicy": {
                    "shape": "ResourcePolicy"
                },
                "profileType": {
                    "shape": "ProfileType"
                },
                "optInFeatures": {
                    "shape": "OptInFeatures"
                },
                "permissionUpdateRequired": {
                    "shape": "Boolean"
                },
                "applicationProperties": {
                    "shape": "ApplicationPropertiesList"
                }
            }
        },
        "ProfileArn": {
            "type": "string",
            "max": 950,
            "min": 0,
            "pattern": "arn:aws:(codewhisperer|transform):[-.a-z0-9]{1,63}:\\d{12}:profile/([a-zA-Z0-9]){12}"
        },
        "ProfileDescription": {
            "type": "string",
            "max": 256,
            "min": 1,
            "pattern": "[\\sa-zA-Z0-9_-]*"
        },
        "ProfileList": {
            "type": "list",
            "member": {
                "shape": "Profile"
            }
        },
        "ProfileName": {
            "type": "string",
            "max": 100,
            "min": 1,
            "pattern": "[a-zA-Z][a-zA-Z0-9_-]*"
        },
        "ProfileStatus": {
            "type": "string",
            "enum": ["ACTIVE", "CREATING", "CREATE_FAILED", "UPDATING", "UPDATE_FAILED", "DELETING", "DELETE_FAILED"]
        },
        "ProfileType": {
            "type": "string",
            "enum": ["Q_DEVELOPER", "CODEWHISPERER"]
        },
        "ProgrammingLanguage": {
            "type": "structure",
            "required": ["languageName"],
            "members": {
                "languageName": {
                    "shape": "ProgrammingLanguageLanguageNameString"
                }
            },
            "documentation": "<p>Programming Languages supported by CodeWhisperer</p>"
        },
        "ProgrammingLanguageLanguageNameString": {
            "type": "string",
            "max": 128,
            "min": 1,
            "pattern": "(python|javascript|java|csharp|typescript|c|cpp|go|kotlin|php|ruby|rust|scala|shell|sql|json|yaml|vue|tf|tsx|jsx|plaintext|systemverilog|dart|lua|swift|hcl|powershell|r|abap)"
        },
        "PromptLogging": {
            "type": "structure",
            "required": ["s3Uri", "toggle"],
            "members": {
                "s3Uri": {
                    "shape": "S3Uri"
                },
                "toggle": {
                    "shape": "OptInFeatureToggle"
                }
            }
        },
        "Recommendation": {
            "type": "structure",
            "required": ["content"],
            "members": {
                "content": {
                    "shape": "RecommendationContentString"
                },
                "references": {
                    "shape": "References"
                },
                "mostRelevantMissingImports": {
                    "shape": "Imports"
                }
            }
        },
        "RecommendationContentString": {
            "type": "string",
            "max": 5120,
            "min": 1,
            "sensitive": true
        },
        "RecommendationsList": {
            "type": "list",
            "member": {
                "shape": "Recommendation"
            },
            "max": 10,
            "min": 0
        },
        "RecommendationsWithReferencesPreference": {
            "type": "string",
            "documentation": "<p>Recommendations with references setting for CodeWhisperer</p>",
            "enum": ["BLOCK", "ALLOW"]
        },
        "Reference": {
            "type": "structure",
            "members": {
                "licenseName": {
                    "shape": "ReferenceLicenseNameString",
                    "documentation": "<p>License name</p>"
                },
                "repository": {
                    "shape": "ReferenceRepositoryString",
                    "documentation": "<p>Code Repsitory for the associated reference</p>"
                },
                "url": {
                    "shape": "ReferenceUrlString",
                    "documentation": "<p>Respository URL</p>"
                },
                "recommendationContentSpan": {
                    "shape": "Span",
                    "documentation": "<p>Span / Range for the Reference</p>"
                }
            },
            "documentation": "<p>Code Reference / Repository details</p>"
        },
        "ReferenceLicenseNameString": {
            "type": "string",
            "max": 1024,
            "min": 1
        },
        "ReferenceRepositoryString": {
            "type": "string",
            "max": 1024,
            "min": 1
        },
        "ReferenceTrackerConfiguration": {
            "type": "structure",
            "required": ["recommendationsWithReferences"],
            "members": {
                "recommendationsWithReferences": {
                    "shape": "RecommendationsWithReferencesPreference"
                }
            }
        },
        "ReferenceUrlString": {
            "type": "string",
            "max": 1024,
            "min": 1
        },
        "References": {
            "type": "list",
            "member": {
                "shape": "Reference"
            },
            "max": 10,
            "min": 0
        },
        "RepositoryId": {
            "type": "string",
            "max": 255,
            "min": 1,
            "pattern": ".*(?x)^([a-zA-Z0-9-_\\.\\s()]+/)+[\\w-\\.\\+_\\s]+",
            "sensitive": true
        },
        "RepositoryList": {
            "type": "list",
            "member": {
                "shape": "RepositoryId"
            },
            "max": 100,
            "min": 1,
            "sensitive": true
        },
        "ResourceArn": {
            "type": "string",
            "max": 1224,
            "min": 0,
            "pattern": "arn:([-.a-z0-9]{1,63}:){2}([-.a-z0-9]{0,63}:){2}([a-zA-Z0-9-_:/]){1,1023}"
        },
        "ResourceNotFoundException": {
            "type": "structure",
            "required": ["message"],
            "members": {
                "message": {
                    "shape": "String"
                }
            },
            "documentation": "<p>This exception is thrown when describing a resource that does not exist.</p>",
            "exception": true
        },
        "ResourcePolicy": {
            "type": "structure",
            "required": ["effect"],
            "members": {
                "effect": {
                    "shape": "ResourcePolicyEffect"
                }
            }
        },
        "ResourcePolicyEffect": {
            "type": "string",
            "enum": ["ALLOW", "DENY"]
        },
        "S3Reference": {
            "type": "structure",
            "required": ["uri"],
            "members": {
                "uri": {
                    "shape": "S3Uri"
                }
            }
        },
        "S3Uri": {
            "type": "string",
            "max": 1024,
            "min": 1,
            "pattern": "s3://((?!xn--)[a-z0-9](?![^/]*[.]{2})[a-z0-9-.]{1,61}[a-z0-9](?<!-s3alias)(?<!--ol-s3)(?<!([0-9]{1,3}\\.)([0-9]{1,3}\\.)([0-9]{1,3}\\.)([0-9]{1,3})))/(.{0,1024})"
        },
        "SSOIdentityDetails": {
            "type": "structure",
            "required": ["instanceArn", "oidcClientId"],
            "members": {
                "instanceArn": {
                    "shape": "ResourceArn"
                },
                "oidcClientId": {
                    "shape": "String"
                },
                "ssoRegion": {
                    "shape": "SSORegion"
                }
            }
        },
        "SSOIdentitySource": {
            "type": "structure",
            "required": ["instanceArn"],
            "members": {
                "instanceArn": {
                    "shape": "ResourceArn"
                },
                "ssoRegion": {
                    "shape": "SSORegion"
                }
            }
        },
        "SSORegion": {
            "type": "string",
            "max": 63,
            "min": 1,
            "pattern": "[-a-z0-9]{1,63}"
        },
        "Span": {
            "type": "structure",
            "members": {
                "start": {
                    "shape": "SpanStartInteger"
                },
                "end": {
                    "shape": "SpanEndInteger"
                }
            },
            "documentation": "<p>Represents span in a text.</p>"
        },
        "SpanEndInteger": {
            "type": "integer",
            "box": true,
            "min": 0
        },
        "SpanStartInteger": {
            "type": "integer",
            "box": true,
            "min": 0
        },
        "String": {
            "type": "string"
        },
        "SupplementalContext": {
            "type": "structure",
            "required": ["filePath", "content"],
            "members": {
                "filePath": {
                    "shape": "SupplementalContextFilePathString"
                },
                "content": {
                    "shape": "SupplementalContextContentString"
                },
                "type": {
                    "shape": "SupplementalContextType"
                },
                "metadata": {
                    "shape": "SupplementalContextMetadata"
                }
            }
        },
        "SupplementalContextContentString": {
            "type": "string",
            "max": 10240,
            "min": 1,
            "sensitive": true
        },
        "SupplementalContextFilePathString": {
            "type": "string",
            "max": 1024,
            "min": 1,
            "sensitive": true
        },
        "SupplementalContextList": {
            "type": "list",
            "member": {
                "shape": "SupplementalContext"
            },
            "max": 20,
            "min": 0
        },
        "SupplementalContextMetadata": {
            "type": "structure",
            "members": {
                "previousEditorStateMetadata": {
                    "shape": "PreviousEditorStateMetadata"
                }
            },
            "union": true
        },
        "SupplementalContextType": {
            "type": "string",
            "enum": ["PreviousEditorState", "WorkspaceContext"]
        },
        "Tag": {
            "type": "structure",
            "required": ["key", "value"],
            "members": {
                "key": {
                    "shape": "TagKey"
                },
                "value": {
                    "shape": "TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string",
            "max": 128,
            "min": 1
        },
        "TagKeyList": {
            "type": "list",
            "member": {
                "shape": "TagKey"
            },
            "max": 50,
            "min": 0
        },
        "TagList": {
            "type": "list",
            "member": {
                "shape": "Tag"
            },
            "max": 50,
            "min": 0
        },
        "TagResourceRequest": {
            "type": "structure",
            "required": ["resourceArn", "tags"],
            "members": {
                "resourceArn": {
                    "shape": "ResourceArn"
                },
                "tags": {
                    "shape": "TagList"
                }
            }
        },
        "TagResourceResponse": {
            "type": "structure",
            "members": {}
        },
        "TagValue": {
            "type": "string",
            "max": 256,
            "min": 0
        },
        "TenantId": {
            "type": "string",
            "max": 1024,
            "min": 1
        },
        "ThrottlingException": {
            "type": "structure",
            "required": ["message"],
            "members": {
                "message": {
                    "shape": "String"
                },
                "reason": {
                    "shape": "ThrottlingExceptionReason"
                }
            },
            "documentation": "<p>This exception is thrown when request was denied due to request throttling.</p>",
            "exception": true,
            "retryable": {
                "throttling": true
            }
        },
        "ThrottlingExceptionReason": {
            "type": "string",
            "documentation": "<p>Reason for ThrottlingException</p>",
            "enum": ["MONTHLY_REQUEST_COUNT"]
        },
        "Timestamp": {
            "type": "timestamp"
        },
        "UntagResourceRequest": {
            "type": "structure",
            "required": ["resourceArn", "tagKeys"],
            "members": {
                "resourceArn": {
                    "shape": "ResourceArn"
                },
                "tagKeys": {
                    "shape": "TagKeyList"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "structure",
            "members": {}
        },
        "UpdateCustomizationRequest": {
            "type": "structure",
            "required": ["identifier", "operation"],
            "members": {
                "identifier": {
                    "shape": "CustomizationIdentifier"
                },
                "operation": {
                    "shape": "UpdateOperation"
                },
                "clientToken": {
                    "shape": "IdempotencyToken"
                },
                "dataReference": {
                    "shape": "DataReference"
                },
                "version": {
                    "shape": "Version"
                },
                "includeRepos": {
                    "shape": "RepositoryList"
                }
            }
        },
        "UpdateCustomizationResponse": {
            "type": "structure",
            "members": {}
        },
        "UpdateOperation": {
            "type": "string",
            "enum": ["ACTIVATE", "DEACTIVATE", "UPDATE"]
        },
        "UpdateProfileRequest": {
            "type": "structure",
            "required": ["profileArn"],
            "members": {
                "profileArn": {
                    "shape": "ProfileArn"
                },
                "identitySource": {
                    "shape": "IdentitySource"
                },
                "profileName": {
                    "shape": "ProfileName"
                },
                "description": {
                    "shape": "ProfileDescription"
                },
                "referenceTrackerConfiguration": {
                    "shape": "ReferenceTrackerConfiguration"
                },
                "activeFunctionalities": {
                    "shape": "ActiveFunctionalityList"
                },
                "kmsKeyArn": {
                    "shape": "ResourceArn"
                },
                "resourcePolicy": {
                    "shape": "ResourcePolicy"
                },
                "targetProfileType": {
                    "shape": "ProfileType"
                },
                "optInFeatures": {
                    "shape": "OptInFeatures"
                }
            }
        },
        "UpdateProfileResponse": {
            "type": "structure",
            "required": ["profileArn"],
            "members": {
                "profileArn": {
                    "shape": "ProfileArn"
                }
            }
        },
        "Url": {
            "type": "string",
            "max": 1024,
            "min": 1
        },
        "ValidationException": {
            "type": "structure",
            "required": ["message"],
            "members": {
                "message": {
                    "shape": "String"
                },
                "reason": {
                    "shape": "ValidationExceptionReason"
                }
            },
            "documentation": "<p>This exception is thrown when the input fails to satisfy the constraints specified by the service.</p>",
            "exception": true
        },
        "ValidationExceptionReason": {
            "type": "string",
            "documentation": "<p>Reason for ValidationException</p>",
            "enum": ["INVALID_CONVERSATION_ID", "CONTENT_LENGTH_EXCEEDS_THRESHOLD", "INVALID_KMS_GRANT"]
        },
        "VendKeyGrantRequest": {
            "type": "structure",
            "required": ["accountId", "usecase"],
            "members": {
                "accountId": {
                    "shape": "AWSAccountId"
                },
                "usecase": {
                    "shape": "VendKeyGrantUseCase"
                }
            }
        },
        "VendKeyGrantResponse": {
            "type": "structure",
            "members": {
                "cmkArn": {
                    "shape": "ResourceArn"
                },
                "grantId": {
                    "shape": "GrantToken"
                },
                "grantToken": {
                    "shape": "GrantId"
                }
            }
        },
        "VendKeyGrantUseCase": {
            "type": "string",
            "enum": [
                "TEST",
                "WEAVER_BIRD",
                "ELASTIC_GUMBY",
                "LOCHNESS",
                "BOWER_BIRD",
                "ELASTIC_GUMBY_V2_JOB",
                "ELASTIC_GUMBY_V2_CHAT"
            ]
        },
        "Version": {
            "type": "long",
            "box": true
        },
        "WorkspaceContext": {
            "type": "structure",
            "required": ["toggle"],
            "members": {
                "toggle": {
                    "shape": "OptInFeatureToggle"
                }
            }
        }
    }
}
