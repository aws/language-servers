
/**
 * THIS FILE IS AUTOGENERATED BY 'generateServiceClient.ts'.
 * DO NOT EDIT BY HAND.
 */

import {Request} from 'aws-sdk/lib/request';
import {Response} from 'aws-sdk/lib/response';
import {AWSError} from 'aws-sdk/lib/error';
import {Service} from 'aws-sdk/lib/service';
import {ServiceConfigurationOptions} from 'aws-sdk/lib/service';
import {ConfigBase as Config} from 'aws-sdk/lib/config-base';
interface Blob {}
declare class CodeWhispererSigV4Client extends Service {
  /**
   * Constructs a service object. This object has one method for each API operation.
   */
  constructor(options?: CodeWhispererSigV4Client.Types.ClientConfiguration)
  config: Config & CodeWhispererSigV4Client.Types.ClientConfiguration;
  /**
   * 
   */
  generateRecommendations(params: CodeWhispererSigV4Client.Types.GenerateRecommendationsRequest, callback?: (err: AWSError, data: CodeWhispererSigV4Client.Types.GenerateRecommendationsResponse) => void): Request<CodeWhispererSigV4Client.Types.GenerateRecommendationsResponse, AWSError>;
  /**
   * 
   */
  generateRecommendations(callback?: (err: AWSError, data: CodeWhispererSigV4Client.Types.GenerateRecommendationsResponse) => void): Request<CodeWhispererSigV4Client.Types.GenerateRecommendationsResponse, AWSError>;
}
declare namespace CodeWhispererSigV4Client {
  export interface FileContext {
    leftFileContent: FileContextLeftFileContentString;
    rightFileContent: FileContextRightFileContentString;
    filename: FileContextFilenameString;
    programmingLanguage: ProgrammingLanguage;
  }
  export type FileContextFilenameString = string;
  export type FileContextLeftFileContentString = string;
  export type FileContextRightFileContentString = string;
  export interface GenerateRecommendationsRequest {
    fileContext: FileContext;
    maxResults?: GenerateRecommendationsRequestMaxResultsInteger;
    nextToken?: GenerateRecommendationsRequestNextTokenString;
    referenceTrackerConfiguration?: ReferenceTrackerConfiguration;
  }
  export type GenerateRecommendationsRequestMaxResultsInteger = number;
  export type GenerateRecommendationsRequestNextTokenString = string;
  export interface GenerateRecommendationsResponse {
    recommendations?: RecommendationsList;
    nextToken?: String;
  }
  export interface Import {
    statement?: ImportStatementString;
  }
  export type ImportStatementString = string;
  export type Imports = Import[];
  export interface ProgrammingLanguage {
    languageName: ProgrammingLanguageLanguageNameString;
  }
  export type ProgrammingLanguageLanguageNameString = string;
  export interface Recommendation {
    content: RecommendationContentString;
    references?: References;
    mostRelevantMissingImports?: Imports;
  }
  export type RecommendationContentString = string;
  export type RecommendationsList = Recommendation[];
  export type RecommendationsWithReferencesPreference = "BLOCK"|"ALLOW"|string;
  export interface Reference {
    licenseName?: ReferenceLicenseNameString;
    repository?: ReferenceRepositoryString;
    url?: ReferenceUrlString;
    recommendationContentSpan?: Span;
  }
  export type ReferenceLicenseNameString = string;
  export type ReferenceRepositoryString = string;
  export interface ReferenceTrackerConfiguration {
    recommendationsWithReferences: RecommendationsWithReferencesPreference;
  }
  export type ReferenceUrlString = string;
  export type References = Reference[];
  export interface Span {
    start?: SpanStartInteger;
    end?: SpanEndInteger;
  }
  export type SpanEndInteger = number;
  export type SpanStartInteger = number;
  export type String = string;
  /**
   * A string in YYYY-MM-DD format that represents the latest possible API version that can be used in this service. Specify 'latest' to use the latest possible version.
   */
  export type apiVersion = "2022-06-15"|"latest"|string;
  export interface ClientApiVersions {
    /**
     * A string in YYYY-MM-DD format that represents the latest possible API version that can be used in this service. Specify 'latest' to use the latest possible version.
     */
    apiVersion?: apiVersion;
  }
  export type ClientConfiguration = ServiceConfigurationOptions & ClientApiVersions;
  /**
   * Contains interfaces for use with the CodeWhispererSigV4Client client.
   */
  export import Types = CodeWhispererSigV4Client;
}
export = CodeWhispererSigV4Client;

    