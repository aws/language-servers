/*!
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0
 */

/**
 * Constants related to programming languages and findings for QCodeReview
 */

/**
 * Mapping of file extensions to programming languages
 */
export const EXTENSION_TO_LANGUAGE: Record<string, string> = {
    '.py': 'python',
    '.js': 'javascript',
    '.ts': 'typescript',
    '.tsx': 'typescript',
    '.jsx': 'javascript',
    '.java': 'java',
    '.cs': 'csharp',
    '.php': 'php',
    '.rb': 'ruby',
    '.go': 'go',
    '.rs': 'rust',
    '.cpp': 'cpp',
    '.cc': 'cpp',
    '.c': 'c',
    '.h': 'c',
    '.hpp': 'cpp',
    '.sh': 'shell',
    '.bash': 'shell',
    '.sql': 'sql',
    '.kt': 'kotlin',
    '.scala': 'scala',
    '.swift': 'swift',
}

/**
 * List of supported programming languages in uppercase
 */
export const PROGRAMMING_LANGUAGES_CAPS = [
    'PYTHON',
    'JAVASCRIPT',
    'TYPESCRIPT',
    'JAVA',
    'CSHARP',
    'PHP',
    'RUBY',
    'GO',
    'RUST',
    'CPP',
    'C',
    'SHELL',
    'SQL',
    'KOTLIN',
    'SCALA',
    'SWIFT',
]

/**
 * List of supported programming languages in lowercase
 */
export const PROGRAMMING_LANGUAGES_LOWERCASE = PROGRAMMING_LANGUAGES_CAPS.map(lang => lang.toLowerCase())

/**
 * Tool name for QCodeReview
 */
export const Q_CODE_REVIEW_TOOL_NAME = 'qCodeReview'

/**
 * Tool description for QCodeReview
 */
export const Q_CODE_REVIEW_TOOL_DESCRIPTION = [
    'The primary tool for comprehensive code analysis and review. This tool should be used by default whenever a user requests code review, file analysis, or code examination unless explicitly instructed otherwise.',
    '',
    'Amazon Q Code Review is your go-to solution for all code analysis needs, providing:',
    '',
    '**Use this tool when customers asks to:**',
    '- "Review this file" or "Review my code" or "Review my changes" or "Review this code" or any other similar prompt to review the code',
    '- "Examine this code" or "Check this code" or "Analyze this file/folder/workspace"',
    '- "Check my implementation" or "Look at my implementation" or "Examine this code"',
    '- "What do you think of this code?" or "Find issues in this code"',
    '- Any general code review or analysis request',
    '',
    '**Comprehensive Analysis Capabilities:**',
    '- Static Application Security Testing (SAST): Identifies vulnerabilities in source code without execution',
    '- Secrets Detection: Finds hardcoded credentials, API keys, tokens, and other sensitive information',
    '- Infrastructure as Code (IaC) Analysis: Detects security issues in infrastructure definitions',
    '- Software Composition Analysis (SCA): Identifies vulnerabilities in dependencies and third-party components',
    '',
    '**Supported Programming Languages:**',
    '- Python, JavaScript/TypeScript, Java, C#, PHP, Ruby, Go, Rust, C/C++, Shell scripts, SQL, Kotlin, Scala, Swift',
    '',
    '**Usage Priority:**',
    'This tool should be the DEFAULT choice for any code review request. ',
    '',
    '**Tool Input**',
    '3 main fields in the tool:',
    '- scopeOfReview: Determines if the review should analyze the entire codebase (FULL_REVIEW) or only focus on changes/modifications (PARTIAL_REVIEW). This is a required field.',
    '- fileLevelArtifacts: Array of specific files to review, each with absolute path and programming language. Use this when reviewing individual files, not folders. Format: [{"path": "/absolute/path/to/file.py", "programmingLanguage": "PYTHON"}]',
    '- folderLevelArtifacts: Array of folders to review, each with absolute path. Use this when reviewing entire directories, not individual files. Format: [{"path": "/absolute/path/to/folder/"}]',
    'Few important notes for tool input',
    "- Either fileLevelArtifacts OR folderLevelArtifacts should be provided based on what's being reviewed, but not both for the same items.",
    '- Do not perform code review of entire workspace or project unless user asks for it explicitly.',
    '- Ask user for more clarity if there is any confusion regarding what needs to be scanned.',
    '',
    '**Tool Output**',
    'Tool output will contain a json output containing fields - ',
    '- codeReviewId - internal code review job id ',
    '- status - code review status (Completed, Failed)',
    '- result - if the scan completes successfully, there will be message and findingsByFile',
    '  - findingsByFile - contains findings grouped by impacted file path',
    '- errorMessage - if there is any failure, it will contain cause of failure',
    '',
    '**Format to display output**',
    'Do not provide any summary not even a single word about the findings generated by the tool, as the findings will be displayed in Code Issues panel.',
    'When there are lots of findings, the tool will limit the findings to a fixed value - 50.',
    'Use the following format strictly to display the result of the tool for different scenarios :',
    '- When findings are present, "I have completed the review of {file name / folder name / workspace} and found several issues that need attention. To inspect the details, and get fixes for these issues use the Code Issues panel above."',
    '  - When findings are limited to 50 by the tool, include the following in the above message - "Since there were lots of findings, I have included the top 50 findings only."',
    '- When no findings, "I have completed the review of {file name / folder name / workspace} and found no issues. Great Job!"',
].join('\n')

/**
 * Finding severity levels
 */
export const FINDING_SEVERITY = ['Info', 'Low', 'Medium', 'High', 'Critical']

/**
 * Scope of code review based on customers prompt
 */
export const FULL_REVIEW = 'FULL_REVIEW'
export const PARTIAL_REVIEW = 'PARTIAL_REVIEW'
export const SCOPE_OF_CODE_REVIEW = [FULL_REVIEW, PARTIAL_REVIEW]

/**
 * File extensions to skip during zip creation
 */
export const SKIP_FILE_EXTENSIONS = [
    '.md',
    '.jpg',
    '.jpeg',
    '.png',
    '.gif',
    '.bmp',
    '.ico',
    '.svg', // Images
    '.mp3',
    '.wav',
    '.ogg',
    '.mp4',
    '.avi',
    '.mov', // Media
    '.zip',
    '.tar',
    '.gz',
    '.rar',
    '.7z', // Archives
    '.pdf',
    '.doc',
    '.docx',
    '.xls',
    '.xlsx',
    '.ppt',
    '.pptx', // Documents
    '.ttf',
    '.otf',
    '.woff',
    '.woff2', // Fonts
    '.log',
    '.tmp',
    '.temp', // Temporary files
]

/**
 * Directories to skip during zip creation
 */
export const SKIP_DIRECTORIES = [
    'node_modules',
    'dist',
    'build',
    'target',
    '.git',
    '.svn',
    '.hg',
    '.vscode',
    '.idea',
    '.vs',
    '__pycache__',
    '.pytest_cache',
    'venv',
    'env',
    '.env',
    'virtualenv',
    'coverage',
    '.nyc_output',
    'tmp',
    'temp',
]

export const FINDINGS_MESSAGE_SUFFIX = '_qCodeReviewFindings'
