{
    "name": "@amzn/monorepo-language-servers",
    "version": "1.0.0",
    "description": "A monorepo for Language Servers for AWS",
    "private": true,
    "workspaces": [
        "app/*",
        "client/**",
        "core/*",
        "server/*",
        "server/aws-lsp-codewhisperer/src.gen/@amzn/codewhisperer-streaming"
    ],
    "scripts": {
        "prepare": "husky install .husky",
        "lint": "eslint app/ client/ core/ script/ server/ --ext .ts,.tsx && prettier --check .",
        "format": "prettier --write .",
        "format-staged": "npx pretty-quick --staged",
        "clean": "ts-node ./script/clean.ts",
        "compile": "npm run generateClients && tsc --build --verbose && npm run postcompile --workspaces --if-present",
        "generateClients": "npm run build -w server/aws-lsp-codewhisperer/src.gen/@amzn/codewhisperer-streaming && ts-node server/aws-lsp-codewhisperer/script/generateServiceClient.ts",
        "watch": "tsc --build --watch",
        "test": "npm run compile && npm run test --workspaces --if-present",
        "test-integ": "npm run compile && npm run test-integ --workspaces --if-present",
        "test-unit": "npm run compile && npm run test-unit --workspaces --if-present",
        "update-runtimes": "cp ../language-server-runtimes/aws-*.tgz bin/ && npm update @aws/language-server-runtimes",
        "package": "npm install && npm run compile && npm run package-x64 --workspaces --if-present"
    },
    "dependencies": {
        "typescript": "^5.0.4"
    },
    "devDependencies": {
        "@types/node": "^20.2.5",
        "@typescript-eslint/eslint-plugin": "^5.59.9",
        "@typescript-eslint/parser": "^5.59.9",
        "eslint": "^8.42.0",
        "eslint-plugin-unused-imports": "^2.0.0",
        "husky": "^8.0.3",
        "prettier": "^2.8.8",
        "pretty-quick": "^3.1.3",
        "ts-node": "^10.9.1"
    },
    "prettier": {
        "printWidth": 120,
        "trailingComma": "es5",
        "tabWidth": 4,
        "singleQuote": true,
        "semi": false,
        "bracketSpacing": true,
        "arrowParens": "avoid",
        "endOfLine": "lf"
    }
}
